#!/bin/bash

DIR="$( cd -P "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
PARENT_DIR="$(dirname "$DIR")"
PID_PATH_NAME=/tmp/gcpcn.pid
##################################
GCP_DIRECTORY=$PARENT_DIR
GCP_USER=gcpc
##################################
VERSION="[[VERSION]]"

id -u $GCP_USER >/dev/null 2>&1;
RES=$?

if ["$RES" == "1"] then
  echo "User $GCP_USER not found!"
  exit 1
fi

if [ -z $JAVA_HOME ]; then
  echo "Unable to locate Java installation! JAVA_HOME env variable is empty"
  echo $USAGE_MSG
  exit 1
fi

echo "Setting environment variables"
. "$GCP_DIRECTORY/bin/settings"

if [ ! -d $DATA_DIR ]; then
  su - $GCP_USER -c "mkdir -p $DATA_DIR"
fi

function start_service() {
  echo "Starting gcpc service ..."
  PARAMS="-logs_dir $LOGS_DIR -gcp_host $GCP_HOST -data_dir $DATA_DIR -analyze_group $ANALYZE_GROUP_ID -jvm_id $JVM_ID -token $ACCOUNT_TOKEN -https $USE_HTTPS -extension $EXTENSION -reaload_config_ms $RELOAD_CONFIG_MS -sync_files_ms $SYNC_FILES_MS -ttl $TTL"

  if [ ! -f $PID_PATH_NAME ]; then
    su - $GCP_USER -c "nohup java $JAVA_PROC_ARGS $PARAMS -Dlogback.configurationFile=$GCP_DIRECTORY/bin/logback.xml -jar $GCP_DIRECTORY/lib/bs.jar 2>> /dev/null >> /dev/null & echo \$! > $PID_PATH_NAME"
    sleep 5
    echo "gcpc service started."
  else
    echo "gcpc is already running."
  fi
}

function stop_service() {
  if [ -f $PID_PATH_NAME ]; then
      PID=$(su - $GCP_USER -c "cat $PID_PATH_NAME");
      echo "$SERVICE_NAME stoping ..."
      echo "$SERVICE_NAME killing $PID ..."
      su - $GCP_USER -c "kill $PID"
      echo "$SERVICE_NAME stopped ..."
      su - $GCP_USER -c "rm -rf $PID_PATH_NAME"
      sleep 5
  else
      echo "$SERVICE_NAME is not running ..."
  fi
}

case $1 in
    start)
        start_service
    ;;
    stop)
        stop_service
    ;;
    restart)
        stop_service
        start_service
    ;;
    version)
        echo "Version $VERSION"
    ;;
    status)
        if [ -f $PID_PATH_NAME ]; then
          PID=$(su - $GCP_USER -c "cat $PID_PATH_NAME");
          echo "Started $PID."
        else
          echo "Not started."
        fi
    ;;
esac