#!/bin/bash

DIR="$( cd -P "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
PID_PATH_NAME=/tmp/gcpcn.pid
SETTINGS_PATH=/etc/default/gcpc
VERSION="[[VERSION]]"

if [ ! -f $SETTINGS_PATH ]; then
   echo "Unable to locate $SETTINGS_PATH configuration file ..."
   exit 1
fi

if [ -z $JAVA_HOME ]; then
  echo "Unable to locate Java installation! JAVA_HOME env variable is empty"
  echo $USAGE_MSG
  exit 1
fi

echo "Setting environment variables"
. "$SETTINGS_PATH"

function start_service() {
  echo "Starting gcpc service ..."
  PARAMS="-logs_dir $LOGS_DIR -gcp_host $GCP_HOST -data_dir $DATA_DIR -analyze_group $ANALYZE_GROUP_ID -jvm_id $JVM_ID -token $ACCOUNT_TOKEN -https $USE_HTTPS -extension $EXTENSION -reaload_config_ms $RELOAD_CONFIG_MS -sync_files_ms $SYNC_FILES_MS -ttl $TTL"

  if [ ! -f $PID_PATH_NAME ]; then
    su - $USER -c "nohup java $JAVA_PROC_ARGS $PARAMS -Dlogback.configurationFile=$DATA_DIR/logback.xml -jar $DATA_DIR/lib/bootstrap 2>> /dev/null >> /dev/null & echo \$! > $PID_PATH_NAME"
    sleep 5
    echo "gcpc service started."
  else
    echo "gcpc is already running."
  fi
}

function stop_service() {
  if [ -f $PID_PATH_NAME ]; then
      PID=$(cat $PID_PATH_NAME);
      echo "$SERVICE_NAME stoping ..."
      echo "$SERVICE_NAME killing $PID ..."
      kill $PID;
      echo "$SERVICE_NAME stopped ..."
      rm -rf $PID_PATH_NAME
      sleep 5
  else
      echo "$SERVICE_NAME is not running ..."
  fi
}

case $1 in
    start)
        start_service
    ;;
    stop)
        stop_service
    ;;
    restart)
        stop_service
        start_service
    ;;
    version)
        echo "Version $VERSION"
    ;;
    status)
        if [ -f $PID_PATH_NAME ]; then
          PID=$(cat $PID_PATH_NAME);
          echo "Started $PID."
        else
          echo "Not started."
        fi
    ;;
esac